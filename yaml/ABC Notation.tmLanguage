<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>abc</string>
		<string>abh</string>
		<string>abp</string>
	</array>
	<key>foldingStartMarker</key>
	<string>^X:\s*\d+</string>
	<key>foldingStopMarker</key>
	<string>^\s*$</string>
	<key>name</key>
	<string>ABC Notation</string>
	<key>patterns</key>
	<dict>
		<key>captures</key>
		<dict>
			<key>1</key>
			<dict>
				<key>name</key>
				<string>entity.name.tag.index.abc</string>
			</dict>
			<key>2</key>
			<dict>
				<key>name</key>
				<string>variable.parameter.index.abc</string>
			</dict>
		</dict>
		<key>match</key>
		<string>^(X:)\s*(\d+)</string>
		<key>patterns</key>
		<array>
			<dict>
				<key>include</key>
				<string>#abc-tune</string>
			</dict>
		</array>
	</dict>
	<key>repository</key>
	<dict>
		<key>abc-chord</key>
		<dict>
			<key>begin</key>
			<string>(\[(?![:|\[\]\d]|(?:[a-zA-Z]:)))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.decoration.chord.abc</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\](?&lt;![:|]))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.decoration.chord.abc</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.chord.abc</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#prototype</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#abc-note</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#abc-rest</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#abc-space</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#decoration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#macro</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
			</array>
		</dict>
		<key>abc-note</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.accidental.abc</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.character.note.abc</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.type.note-length.abc</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x)
  ([_=\^](?:\d*\/*\d*)|=|[_\^]{2})?
  ([A-Ga-g][,']*)
  (\d*[&lt;&gt;/]*\d*)?</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#prototype</string>
				</dict>
			</array>
		</dict>
		<key>abc-rest</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.abc-rest.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.rest-length.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>([XZ])(\d+)?</string>
					<key>name</key>
					<string>meta.code.abc-rest.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.abc-rest.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.rest-length.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
  ([xz])
  ((?:\d*\/*(?:\d*)?)|
   (?:\d*&gt;*(?:\d*)?)|
   (?:\d*&lt;*(?:\d*)?))?</string>
					<key>name</key>
					<string>meta.code.abc-rest.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>abc-space</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.spacer.abc</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.space-length.abc</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x)
  ([yY])
  (\d+(?:\.\d*(?:pt|in|cm)?)?)?</string>
			<key>name</key>
			<string>meta.code.abc-space.abc</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#prototype</string>
				</dict>
			</array>
		</dict>
		<key>abc-tune</key>
		<dict>
			<key>begin</key>
			<string>^(T:)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.title.abc</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.field.title.abc</string>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>meta.tune.abc</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#prototype</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.key.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.key.abc</string>
						</dict>
					</dict>
					<key>end</key>
					<string>^(\s*)?$</string>
					<key>match</key>
					<string>^(K:)\s*([^\r\n]+)?</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#abc-chord</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#abc-note</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#abc-rest</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#abc-space</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#grace</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#decoration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#operators</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#barline</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#inline-field</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>barline</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.barline.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>([ \|\]]\])</string>
					<key>name</key>
					<string>meta.barline.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(\[\|\]|\[\])</string>
					<key>name</key>
					<string>comment.block.documentation.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.barline.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((?&gt;\[\|:*))</string>
					<key>name</key>
					<string>meta.barline.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.barline.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.barline.repeat-length.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
  ((?&gt;
    (?:[\[\|\]][\[\|\]](?=:):)|
    (?:\[+:+)|
    (?::+\[+)|
    (?::+\]*)|
    (?:\]+:+)|
    (?::+\]+)|
    (?:[|]*\]{2}:*)|
    (?:(?=\|)\|[\[\]])|
    (?:[:|]*\|[:|]*)|
    (?:[:|]+\[{1,2})))
  (\d+(?:[,-]\d+)*)?</string>
					<key>name</key>
					<string>meta.barline.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.barline.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.barline.repeat-length.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(:*[\|\[\]])(\d(?:[,-]\d)*)+</string>
					<key>name</key>
					<string>meta.code.barline.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?:^\s*)?(?&gt;%(?!%|abc))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.abc</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>comment.line.percentage.abc</string>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.comment.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&gt;%%)\s*(\w*)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.word.directive.abc</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>variable.parameter.directive.abc</string>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.directive.abc comment.line.percentage.directive.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(true|false|yes|no|on|off)\b</string>
							<key>name</key>
							<string>storage.type.directive.abc</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(\d*(?:\.\d*)?(?:pt|in|cm)?)</string>
									<key>name</key>
									<string>constant.numeric.float.length-unit.abc</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(?i)\b(true|false|yes|no|on|off)\b</string>
									<key>name</key>
									<string>storage.type.directive.boolean.abc</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.special-method.namespace.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?:^\s*)?(?&gt;(%)(abc(?:-\d\.\d)?))</string>
					<key>name</key>
					<string>comment.line.namespace.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^(r:)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.field.remark.abc</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>comment.line.remark.abc</string>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.field.remark.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>decoration</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?:^\s*)?([-\.HLMOPSTuv](?!:))</string>
					<key>name</key>
					<string>variable.language.decoration.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(!\w+!)</string>
					<key>name</key>
					<string>variable.language.decoration.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
  (\!(?:
      \+|\-\(|\-\)|\/{1,3}|[0-5]|\&lt;\(|\&lt;\)|\&lt;|\&gt;\(|\&gt;\)|\&gt;|\^|
      accent|arpeggio|beam-accel|beam-rall|beambr[12]|beamon|
      breath|coda|courtesy|crescendo|crescendo\(|crescendo\)|
      D\.C\.(?:alcoda|alfine)?|D\.S\.(?:alcoda|alfine)?|
      dacapo|dacoda|diminuendo|diminuendo\(|diminuendo\)|
      dot|downbow|editorial|emphasis|f+|fermata|fine|gmark|
      invertedfermata|invertedturn|invertedturnx|invisible|
      longphrase|lowermordent|marcato|mediumphrase|mf|mordent|
      mp|open|p+|plus|pralltriller|rbend|rbstop|roll|segno|sfz|
      shortphrase|slide|snap|stemless|tenuto|thumb|
      trem[1-4]|trill|trill\(|trill\)|turn|turnx|upbow|uppermordent|wedge|
      xstem|\~\(|\~\))\!)</string>
					<key>name</key>
					<string>variable.language.decoration.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(~(?![h-wH-W][a-zA-Z0-9]*))</string>
					<key>name</key>
					<string>variable.language.decoration.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>((?:\((?![\d:])[',]?)|\))</string>
					<key>name</key>
					<string>support.type.decoration.slur.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>escape</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\\.)</string>
					<key>name</key>
					<string>constant.character.escape.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\\\\)</string>
					<key>name</key>
					<string>constant.character.escape.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\\u\h{4})</string>
					<key>name</key>
					<string>constant.character.escape.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:\\[[:punct:]&amp;&amp;[\w]&amp;&amp;[^[ \t\v\f]]]{2})</string>
					<key>name</key>
					<string>constant.character.escape.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:&amp;\w+;)</string>
					<key>name</key>
					<string>constant.character.escape.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:&amp;#\d+;)</string>
					<key>name</key>
					<string>constant.character.escape.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:&amp;#x\h+;)</string>
					<key>name</key>
					<string>constant.character.escape.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\\%)</string>
					<key>name</key>
					<string>constant.character.escape.abc</string>
				</dict>
			</array>
		</dict>
		<key>fields</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^([[:alpha:]+&amp;&amp;[^IKPVTXr]]:)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.field.abc</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>string.unquoted.field.abc</string>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.field.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^(I:)\s*(\w+)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.instruction.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.word.directive.abc</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>variable.parameter.directive.abc</string>
					<key>name</key>
					<string>meta.instruction.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(true|false|yes|no|on|off)\b</string>
							<key>name</key>
							<string>storage.type.directive.abc</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^(V:)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.voice.abc</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>variable.parameter.voice.abc</string>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.field.voice.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^(P:)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.part.abc</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>variable.parameter.part.abc</string>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.field.part.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>grace</key>
		<dict>
			<key>begin</key>
			<string>(\{/?)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.grace.abc</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.grace.abc</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.code.grace.abc</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#prototype</string>
				</dict>
				<dict>
					<key>match</key>
					<string>([A-Ga-g][,']*)</string>
					<key>name</key>
					<string>constant.character.note.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\d*[&lt;&gt;/]*\d*)?</string>
					<key>name</key>
					<string>constant.numeric.note-length.abc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#abc-rest</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#decoration</string>
				</dict>
			</array>
		</dict>
		<key>inline-field</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\[[[:alpha:]&amp;&amp;[^IKPVXr]]:)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.inline-field.abc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>General Inline Field</string>
					<key>contentName</key>
					<string>string.unquoted.inline-field.abc</string>
					<key>end</key>
					<string>(\])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.inline-field.abc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.inline-field.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\[r:)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.inline-field.remark.abc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Inline Remark</string>
					<key>contentName</key>
					<string>comment.block.remark.abc</string>
					<key>end</key>
					<string>(\])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.inline-field.remark.abc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.inline-field.remark.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\[I:)\s*(\w+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.inline-field.instruction.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.word.instruction.abc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Inline Instruction</string>
					<key>contentName</key>
					<string>variable.parameter.instruction.abc</string>
					<key>end</key>
					<string>(\])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.inline-field.instruction.abc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.inline-field.instruction.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(\d*(?:\.\d*)?(?:pt|in|cm)?)</string>
							<key>name</key>
							<string>constant.numeric.float.length-unit.abc</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\[T:)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.inline-field.title.abc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Inline Title</string>
					<key>contentName</key>
					<string>string.unquoted.title.abc</string>
					<key>end</key>
					<string>(\])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.inline-field.title.abc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.inline-field.title.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\[V:)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.inline-field.voice.abc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Inline Voice</string>
					<key>contentName</key>
					<string>variable.parameter.voice.abc</string>
					<key>end</key>
					<string>(\])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.inline-field.voice.abc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.inline-field.voice.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\[P:)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.inline-field.part.abc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Inline Part</string>
					<key>contentName</key>
					<string>variable.parameter.part.abc</string>
					<key>end</key>
					<string>(\])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.inline-field.part.abc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.inline-field.part.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>macro</key>
		<dict>
			<key>match</key>
			<string>(\~[h-zH-Z][a-zA-Z0-9]{,30})</string>
			<key>name</key>
			<string>support.type.macro.abc</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#prototype</string>
				</dict>
			</array>
		</dict>
		<key>operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\(\d+(?::\d*(?::\d*)?)?)</string>
					<key>name</key>
					<string>support.type.tuplet.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\`</string>
					<key>name</key>
					<string>support.constant.backquote.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(\(\&amp;|\&amp;\&amp;?|\&amp;\))</string>
					<key>name</key>
					<string>support.function.overlay.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(\$(?= *| *$))</string>
					<key>name</key>
					<string>support.constant.line-break.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(\\(?= *| *$))</string>
					<key>name</key>
					<string>support.constant.line-continue.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>prototype</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escape</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>("(?![_&lt;&gt;^@]))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.chord.begin.abc</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>string.quoted.double.chord.abc</string>
					<key>end</key>
					<string>(")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.chord.end.abc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.string.chord.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\"[_&lt;&gt;^]|\"@(?:\d+(?:\.\d*)?),(?:\d+(?:\.\d*)?))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.annotation.begin.abc</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>string.quoted.double.annotation.abc</string>
					<key>end</key>
					<string>(")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.annotation.end.abc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.string.annotation.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.abc</string>
	<key>uuid</key>
	<string>431a5f26-5897-4146-8415-25a3c4b859c0</string>
</dict>
</plist>
