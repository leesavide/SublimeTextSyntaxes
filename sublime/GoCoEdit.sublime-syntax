%YAML 1.2
---
file_extensions:
  - gcemode
  - gcetheme
scope: source.gce

contexts:
  main:
    - include: value

  array:
    - match: '\['
      scope: punctuation.definition.array.begin.gce
      push:
        - meta_scope: meta.structure.array.gce
        - match: '\]'
          scope: punctuation.definition.array.end.gce
          pop: true
        - include: value
        - match: ","
          scope: punctuation.separator.array.gce
        - match: '[^\s\]]'
          scope: invalid.illegal.expected-array-separator.gce

  comments:
    - match: /\*\*
      scope: punctuation.definition.comment.gce
      push:
        - meta_scope: comment.block.documentation.gce
        - match: \*/
          pop: true
    - match: /\*
      scope: punctuation.definition.comment.gce
      push:
        - meta_scope: comment.block.gce
        - match: \*/
          pop: true
    - match: (//).*$\n?
      scope: comment.line.double-slash.gce
      captures:
        1: punctuation.definition.comment.gce

  constant:
    - match: \b(?:true|false|null)\b
      scope: constant.language.gce

  number:
    # handles integer and decimal numbers
    - match: |-
        (?x:
          -?
          (?:0|[1-9]\d*)
          (?:
            (?:\.\d+)?
            (?:[eE][+-]?\d+)?
          )?)
      scope: constant.numeric.gce

  object:
    # a JSON object
    - match: '\{'
      scope: punctuation.definition.dictionary.begin.gce
      push:
        - meta_scope: meta.structure.dictionary.gce
        - include: string
        - include: comments
        - match: |-
            (?x)
              (?:^\s*)?(\")
              (token(?:izer)?|name|ext|state|parse|regex|
               overwriteState|stateAfterMatch|recoverState|
               onlyOnLineStart|dash_docsets|symbol_search|hint|global)
              (\")\s*(:)
          scope: meta.structure.key.gce
          captures:
            1: punctuation.definition.string.begin.gce
            2: keyword.control.gce
            3: punctuation.definition.string.end.gce
            4: punctuation.separator.dictionary.key-value.gce
          push:
            - meta_scope: meta.structure.dictionary.value.gce
            - match: '(,)|(?=\})'
              captures:
                1: punctuation.separator.dictionary.pair.gce
              pop: true
            - include: value
            - match: '[^\s,]'
              scope: invalid.illegal.expected-dictionary-separator.gce
        - match: '\}'
          scope: punctuation.definition.dictionary.end.gce
          pop: true
        - match: '[^\s\}]'
          scope: invalid.illegal.expected-dictionary-separator.gce

  string:
    - match: '"'
      scope: punctuation.definition.string.begin.gce
      push:
        - meta_scope: string.quoted.double.gce
        - match: (?x:\\(?:["\\/bfnrt]|u[0-9a-fA-F]{4}))
          scope: constant.character.escape.gce
        - match: \\.
          scope: invalid.illegal.unrecognized-string-escape.gce
        - match: '"'
          scope: punctuation.definition.string.end.gce
          pop: true

  value:
    - include: constant
    - include: number
    - include: string
    - include: array
    - include: object
    - include: comments
