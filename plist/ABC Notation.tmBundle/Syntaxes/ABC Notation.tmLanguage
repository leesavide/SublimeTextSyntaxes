<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>abc</string>
		<string>abh</string>
		<string>abp</string>
	</array>
	<key>foldingStartMarker</key>
	<string>^X:|\(</string>
	<key>foldingStopMarker</key>
	<string>^(?:\s*)?$|\)</string>
	<key>name</key>
	<string>ABC Notation</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>^(X:)\s*(\d+)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.index.abc</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.index.abc</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>ABC Tune</string>
			<key>end</key>
			<string>^(\s*)?$</string>
			<key>name</key>
			<string>meta.tune.abc</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tune-body</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#title-field</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#fields</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>#prototype</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#embedded-content</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>abc-chord</key>
		<dict>
			<key>begin</key>
			<string>(?x)
  (\[
    (?![\[\|\]&lt;&gt;/\d\r\n\s]|(?:[a-zA-Z]:))
  )</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.decoration.chord.abc</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Chord Sequences</string>
			<key>end</key>
			<string>(\](?&lt;![:\|]))(\d*[&lt;&gt;/]*\d*)?</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.decoration.chord.abc</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.note-length.abc</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.chord.abc</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#abc-note</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#abc-rest</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#abc-space</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#decoration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#macro</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
			</array>
		</dict>
		<key>abc-note</key>
		<dict>
			<key>comment</key>
			<string>Note Values (Accidentals, Pitch, Note Length)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language.accidental.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.character.note.abc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.note-length.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
  ([_=\^](?:\d*\/*\d*)|=|[_\^]{2})?
  ([A-Ga-g][,']*)
  (\d*[&lt;&gt;/]*\d*)?</string>
				</dict>
			</array>
		</dict>
		<key>abc-rest</key>
		<dict>
			<key>comment</key>
			<string>Rests &amp; Multi-measure Rests</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.abc-rest.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.rest-length.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>([XZ])(\d+)?</string>
					<key>name</key>
					<string>meta.code.abc-rest.abc</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.abc-rest.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.rest-length.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>([xz])(\d*[&lt;&gt;/]*\d*)?</string>
					<key>name</key>
					<string>meta.code.abc-rest.abc</string>
				</dict>
			</array>
		</dict>
		<key>abc-space</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.spacer.abc</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.space-length.abc</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Spacing Rest</string>
			<key>match</key>
			<string>([yY])(\d+(?:\.\d*(?:pt|in|cm)?)?)?\b</string>
			<key>name</key>
			<string>meta.code.abc-space.abc</string>
		</dict>
		<key>annotation</key>
		<dict>
			<key>begin</key>
			<string>(\"[_&lt;&gt;^@])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.annotation.begin.abc</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>String Annotations</string>
			<key>contentName</key>
			<string>string.quoted.double.annotation.abc</string>
			<key>end</key>
			<string>(")</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.annotation.end.abc</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.annotation.abc</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escape</string>
				</dict>
			</array>
		</dict>
		<key>barline</key>
		<dict>
			<key>comment</key>
			<string>Bar lines, Repeat Section Bar Lines</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.block.documentation.barline.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>comment.block.documentation.barline.repeat-length.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((?&gt;\[\|\]|\[\]))((?&gt;\d+(?:[,-]\d+)*))?</string>
					<key>name</key>
					<string>meta.barline.invisible.abc</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.barline.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((?&gt;:+))</string>
					<key>name</key>
					<string>meta.barline.abc</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.barline.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\[\[)</string>
					<key>name</key>
					<string>meta.barline.abc</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.barline.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\|\])</string>
					<key>name</key>
					<string>meta.barline.abc</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.barline.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((?&gt;[\[\|\]]:+))</string>
					<key>name</key>
					<string>meta.barline.abc</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.barline.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.barline.repeat-length.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((?&gt;:*\|+))((?&gt;\d+(?:[,-]\d+)*))?</string>
					<key>name</key>
					<string>meta.barline.abc</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.barline.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.barline.repeat-length.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((?&gt;:*\]))((?&gt;\d+(?:[,-]\d+)*))</string>
					<key>name</key>
					<string>meta.barline.abc</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.barline.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.barline.repeat-length.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((?&gt;:*\[+(?![a-zA-Z]:|[^\[\s\r\n:\d\|\]])))((?&gt;\d+(?:[,-]\d+)*))?</string>
					<key>name</key>
					<string>meta.barline.abc</string>
				</dict>
			</array>
		</dict>
		<key>chord-symbol</key>
		<dict>
			<key>begin</key>
			<string>("(?![_&lt;&gt;^@]))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.chord.begin.abc</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>String Chord Symbols</string>
			<key>end</key>
			<string>(")</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.chord.end.abc</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.chord.abc</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escape</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>comment</key>
			<string>Line Comments, Directives / Pseudo-Comments, Namespace Comments, and Remark Fields</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?:^\s*)?(?&gt;%(?!%|abc))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.line.percentage.abc punctuation.definition.comment.abc</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>comment.line.percentage.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#escape</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#directive</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.special-method.namespace.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?:^\s*)?(?&gt;(%)(abc(?:-\d\.\d)?))</string>
					<key>name</key>
					<string>comment.line.namespace.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#escape</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#directive</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^(r:)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.field.remark.abc</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>comment.line.remark.abc</string>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.field.remark.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#escape</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#directive</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive</string>
				</dict>
			</array>
		</dict>
		<key>decoration</key>
		<dict>
			<key>comment</key>
			<string>Decoration Symbols</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?:^\s*)?([-\.~HLMOPSTuv](?!:))</string>
					<key>name</key>
					<string>variable.language.decoration.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(!\w+!)</string>
					<key>name</key>
					<string>variable.language.decoration.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
  (!(?:\+|-[()]|\/{1,3}|[0-5]|\&lt;[()]?|\&gt;[()]?|\^|
     accent|arpeggio|beam-accel|beam-rall|beambr[12]|beamon|
     breath|coda|courtesy|crescendo[()]?|
     D\.C\.(?:alcoda|alfine)?|D\.S\.(?:alcoda|alfine)?|
     dacapo|dacoda|diminuendo[()]?|dot|downbow|editorial|
     emphasis|f+|fermata|fine|gmark|invertedfermata|
     invertedturn|invertedturnx|invisible|longphrase|
     lowermordent|marcato|mediumphrase|mf|mordent|mp|open|p+|
     plus|pralltriller|rbend|rbstop|roll|segno|sfz|shortphrase|
     slide|snap|stemless|tenuto|thumb|trem[1-4]|trill[()]?|
     turn|turnx|upbow|uppermordent|wedge|xstem|\~[()])!)</string>
					<key>name</key>
					<string>variable.language.decoration.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(~(?![h-wH-W][a-zA-Z0-9]*))</string>
					<key>name</key>
					<string>variable.language.decoration.abc</string>
				</dict>
			</array>
		</dict>
		<key>directive</key>
		<dict>
			<key>begin</key>
			<string>((?&gt;%%))\s*(\w*)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>comment.line.percentage.directive.abc punctuation.definition.comment.abc</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.word.directive.abc</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>variable.parameter.directive.abc</string>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>meta.directive.abc</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?x)
  (MIDI +
    (?:no)?barlines|bassprog|(?:no)?beataccents|beat(?:mod|string)?|
    bend(?:velocity|string)|chord(?:attack|name|program)|
    control(?:combo|string)?|deltaloudness|droneo(?:n|ff)|
    drum(?:on|off|bars|map)|expand|fermata(?:fixed|proportional)?|
    gchord(?:on|off)?|grace(?:divider)?|makechordchannels|pitchbend|
    portamento|program|ptstress|randomchordattack|ratio|stressmodel|
    snt|rtranspose|temperament(?:linear|equal|normal)|transpose|
    trim|vol(inc)?)\b</string>
					<key>name</key>
					<string>keyword.operator.word.directive.midi.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\d*(?:\.\d*)?(?:pt|in|cm)?)</string>
					<key>name</key>
					<string>constant.numeric.float.length-unit.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(true|false|yes|no|on|off)\b</string>
					<key>name</key>
					<string>storage.type.directive.abc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
			</array>
		</dict>
		<key>embedded-content</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(%%)(begintext)\b(\s+(?:obeylines|fill|ragged|justify|align|skip))?\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.line.percentage.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.directive.abc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.directive.abc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Typeset Text</string>
					<key>contentName</key>
					<string>string.unquoted.typeset.abc</string>
					<key>end</key>
					<string>(%%)\s*(endtext)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.line.percentage.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.directive.abc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.typeset.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(%%)\s*(beginml)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.line.percentage.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.directive.abc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Embedded HTML</string>
					<key>end</key>
					<string>(%%)\s*(endml)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.line.percentage.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.directive.abc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.html.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.html.basic</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(%%)\s*(beginjs)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.line.percentage.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.directive.abc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Embedded JavaScript</string>
					<key>end</key>
					<string>(%%)\s*(endjs)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.line.percentage.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.directive.abc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.js.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.js</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(%%)\s*(beginsvg)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.line.percentage.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.directive.abc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Embedded SVG</string>
					<key>end</key>
					<string>(%%)\s*(endsvg)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.line.percentage.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.directive.abc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.svg.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.xml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(%%)\s*(beginps)(\s+(?:nosvg))?\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.line.percentage.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.directive.abc</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.directive.abc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Embedded PostScript</string>
					<key>end</key>
					<string>(%%)\s*(endps)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.line.percentage.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.directive.abc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.ps.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.postscript</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(%%)\s*(beginmd)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.line.percentage.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.directive.abc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Embedded Markdown</string>
					<key>end</key>
					<string>(%%)\s*(endmd)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.line.percentage.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.directive.abc</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.html.markdown</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#prototype</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>escape</key>
		<dict>
			<key>comment</key>
			<string>Escape Characters</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\\(?:\\|%|[^ \n\r]|u\h{4}|u\h{8}|\\[[:punct:]&amp;&amp;[\w]&amp;&amp;[^[ \t\v\f]]]{2}))</string>
					<key>name</key>
					<string>constant.character.escape.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:&amp;\w+;)</string>
					<key>name</key>
					<string>constant.character.escape.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:&amp;#\d+;)</string>
					<key>name</key>
					<string>constant.character.escape.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:&amp;#x\h+;)</string>
					<key>name</key>
					<string>constant.character.escape.abc</string>
				</dict>
			</array>
		</dict>
		<key>fields</key>
		<dict>
			<key>comment</key>
			<string>Instruction field, Info fields, Voice field, Part field</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#instruction-field</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>^((?&gt;[[:alpha:]+&amp;&amp;[^IKPVTXr]]:))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.field.abc</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>string.unquoted.field.abc</string>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.field.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escape</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^((?&gt;V:))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.voice.abc</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>variable.parameter.voice.abc</string>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.field.voice.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escape</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^((?&gt;P:))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.part.abc</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>variable.parameter.part.abc</string>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.field.part.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escape</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>grace</key>
		<dict>
			<key>begin</key>
			<string>(\{\/?)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.grace.abc</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Grace Notes</string>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.grace.abc</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.code.grace.abc</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>([A-Ga-g][,']*)</string>
					<key>name</key>
					<string>constant.character.note.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\d*[&lt;&gt;/]*\d*)?</string>
					<key>name</key>
					<string>storage.type.note-length.abc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#abc-rest</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#decoration</string>
				</dict>
			</array>
		</dict>
		<key>illegals</key>
		<dict>
			<key>comment</key>
			<string>Illegal Syntax</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.barline.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>([\[]{2,}(?&lt;!\|)(?!:))</string>
					<key>name</key>
					<string>meta.code.illegal.abc</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.barline.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>([\]](?!:)(?&lt;![|\]]))</string>
					<key>name</key>
					<string>meta.code.illegal.abc</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.barline.abc</string>
						</dict>
					</dict>
					<key>match</key>
					<string>([\[]{2,}(?!:))</string>
					<key>name</key>
					<string>meta.code.illegal.abc</string>
				</dict>
			</array>
		</dict>
		<key>inline-field</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#inline-instruction</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>((?&gt;\[[[:alpha:]&amp;&amp;[^IKPVXr]]:))\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.inline-field.abc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Inline Info Fields</string>
					<key>contentName</key>
					<string>string.unquoted.inline-field.abc</string>
					<key>end</key>
					<string>\s*((?&gt;\]))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.inline-field.abc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.inline-field.abc</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>((?&gt;\[r:))\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.inline-field.remark.abc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Inline Remark Field</string>
					<key>contentName</key>
					<string>comment.block.remark.abc</string>
					<key>end</key>
					<string>\s*((?&gt;\]))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.inline-field.remark.abc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.inline-field.remark.abc</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>((?&gt;\[V:))\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.inline-field.voice.abc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Inline Voice Field</string>
					<key>contentName</key>
					<string>variable.parameter.voice.abc</string>
					<key>end</key>
					<string>\s*((?&gt;\]))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.inline-field.voice.abc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.inline-field.voice.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#escape</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>((?&gt;\[P:))\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.inline-field.part.abc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Inline Part Field</string>
					<key>contentName</key>
					<string>variable.parameter.part.abc</string>
					<key>end</key>
					<string>\s*((?&gt;\]))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.inline-field.part.abc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.inline-field.part.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#escape</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>((?&gt;\[T:))\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.inline-field.title.abc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Inline Title Field</string>
					<key>contentName</key>
					<string>string.unquoted.title.abc</string>
					<key>end</key>
					<string>\s*((?&gt;\]))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.inline-field.title.abc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.inline-field.title.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#escape</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>((?&gt;\[K:)\s*\b([^% \n\r]+)?)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.part.abc</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.key.abc</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Inline Key Field</string>
					<key>contentName</key>
					<string>string.unquoted.key.abc</string>
					<key>end</key>
					<string>\s*((?&gt;\]))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.inline-field.key.abc</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.inline-field.key.abc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#escape</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>inline-instruction</key>
		<dict>
			<key>begin</key>
			<string>((?&gt;\[I:)\s*(\w+)\b)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.inline-field.instruction.abc</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.word.instruction.abc</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Inline Instruction Field</string>
			<key>contentName</key>
			<string>variable.parameter.instruction.abc</string>
			<key>end</key>
			<string>\s*((?&gt;\]))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.inline-field.instruction.abc</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.inline-field.instruction.abc</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escape</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
  (MIDI +
    (?:no)?barlines|bassprog|(?:no)?beataccents|beat(?:mod|string)?|
    bend(?:velocity|string)|chord(?:attack|name|program)|
    control(?:combo|string)?|deltaloudness|droneo(?:n|ff)|
    drum(?:on|off|bars|map)|expand|fermata(?:fixed|proportional)?|
    gchord(?:on|off)?|grace(?:divider)?|makechordchannels|pitchbend|
    portamento|program|ptstress|randomchordattack|ratio|stressmodel|
    snt|rtranspose|temperament(?:linear|equal|normal)|transpose|
    trim|vol(inc)?)\b</string>
					<key>name</key>
					<string>keyword.operator.word.directive.midi.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(true|false|yes|no|on|off)\b</string>
					<key>name</key>
					<string>storage.type.directive.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\d*(?:\.\d*)?(?:pt|in|cm)?)\b</string>
					<key>name</key>
					<string>constant.numeric.float.length-unit.abc</string>
				</dict>
			</array>
		</dict>
		<key>instruction-field</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.instruction.abc</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.word.directive.abc</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.directive.abc</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Instruction Field</string>
			<key>contentName</key>
			<string>variable.parameter.directive.abc</string>
			<key>end</key>
			<string>$</string>
			<key>match</key>
			<string>^(I:)\s*(\w+)\b\s+([^%\r\n]*)</string>
			<key>name</key>
			<string>meta.field.instruction.abc</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escape</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
  (MIDI +
    (?:no)?barlines|bassprog|(?:no)?beataccents|beat(?:mod|string)?|
    bend(?:velocity|string)|chord(?:attack|name|program)|
    control(?:combo|string)?|deltaloudness|droneo(?:n|ff)|
    drum(?:on|off|bars|map)|expand|fermata(?:fixed|proportional)?|
    gchord(?:on|off)?|grace(?:divider)?|makechordchannels|pitchbend|
    portamento|program|ptstress|randomchordattack|ratio|stressmodel|
    snt|rtranspose|temperament(?:linear|equal|normal)|transpose|
    trim|vol(inc)?)\b</string>
					<key>name</key>
					<string>keyword.operator.word.directive.midi.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(true|false|yes|no|on|off)\b</string>
					<key>name</key>
					<string>storage.type.directive.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\d*(?:\.\d*)?(?:pt|in|cm)?)\b</string>
					<key>name</key>
					<string>constant.numeric.float.length-unit.abc</string>
				</dict>
			</array>
		</dict>
		<key>key-field</key>
		<dict>
			<key>begin</key>
			<string>^(?&gt;(K:)\s*\b([^% \n\r]+)?\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.key.abc</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.key.abc</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Key Field. The key is significant in that it indicates where the start of the tune body is.</string>
			<key>contentName</key>
			<string>string.unquoted.key.abc</string>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>meta.field.key.abc</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#prototype</string>
				</dict>
			</array>
		</dict>
		<key>macro</key>
		<dict>
			<key>comment</key>
			<string>User-defined Macro</string>
			<key>match</key>
			<string>(\~[h-zH-Z][a-zA-Z0-9]{,30})</string>
			<key>name</key>
			<string>support.type.macro.abc</string>
		</dict>
		<key>operators</key>
		<dict>
			<key>comment</key>
			<string>Overlay Operators, Line Continuations, Slurs, Ties, Line Breaks, Tuplets</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\(\&amp;|\&amp;\&amp;?|\&amp;\))</string>
					<key>name</key>
					<string>support.function.overlay.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\\(?= *| *$))</string>
					<key>name</key>
					<string>support.function.line-continue.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>((?:\((?![\d:])[',]?)|\))</string>
					<key>name</key>
					<string>support.function.slur.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>([-\.`])</string>
					<key>name</key>
					<string>support.type.ties.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\$(?= *| *$))</string>
					<key>name</key>
					<string>support.type.line-break.abc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\(\d+(?::\d*(?::\d*)?)?)</string>
					<key>name</key>
					<string>support.type.tuplet.abc</string>
				</dict>
			</array>
		</dict>
		<key>prototype</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escape</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#fields</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>comment</key>
			<string>Chord symbols and String Annotations</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#chord-symbol</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#annotation</string>
				</dict>
			</array>
		</dict>
		<key>title-field</key>
		<dict>
			<key>begin</key>
			<string>^((?&gt;T:))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.title.abc</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Title Field. This field is only permitted in the header or body of a tune.</string>
			<key>contentName</key>
			<string>string.unquoted.title.abc</string>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>meta.field.title.abc</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#prototype</string>
				</dict>
			</array>
		</dict>
		<key>tune-body</key>
		<dict>
			<key>begin</key>
			<string>^(?&gt;(K:)\s*(\w+)?)\b\s*([^%\r\n]*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.key.abc</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.key.abc</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>string.unquoted.key.abc</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>ABC Tune Body</string>
			<key>end</key>
			<string>^(\s*)?$</string>
			<key>name</key>
			<string>meta.tune.body.abc</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#fields</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#title-field</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#key-field</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#barline</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#inline-field</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#abc-chord</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#abc-note</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#abc-rest</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#abc-space</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#grace</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#decoration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#macro</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prototype</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.abc</string>
	<key>uuid</key>
	<string>c87e9f8a-efbb-4aa8-83e2-c6c26f2aa6fb</string>
</dict>
</plist>
