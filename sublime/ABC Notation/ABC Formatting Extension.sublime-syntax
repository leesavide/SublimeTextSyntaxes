%YAML 1.2
---
name: ABC Formatting Extension
file_extensions:
  - fmt
scope: source.fmt

variables:
  field_value: '[^%\n\r]'

contexts:
  prototype:
    - include: comments

  main:
    - include: directive
    - include: embedded-content

  comments:
    - match: '(?:^\s*)?(%(?!abc))'
      captures:
        1: punctuation.definition.comment.fmt
      push:
        - meta_scope: comment.line.percentage.fmt
        - match: $
          pop: true
    - match: '(?:^\s*)?(?>(%)(abc(?:-\d\.\d)?))'
      scope: comment.line.namespace.fmt
      captures:
        1: punctuation.definition.comment.fmt
        2: keyword.other.special-method.namespace.fmt

  escape:
    - scope: constant.character.escape.fmt
      match: (\\(?:\\|%|[^ \n\r]|u\h{4}|u\h{8}|\\[[:punct:]&&[\w]&&[^[ \t\v\f]]]{2}))
    - scope: constant.character.escape.fmt
      match: '(?:&\w+;)'
    - scope: constant.character.escape.fmt
      match: '(?:&#\d+;)'
    - scope: constant.character.escape.fmt
      match: '(?:&#x\h+;)'

  directive:
    - match: '^\s*((?!(?:begin|end(?:text|svg|ps|js|md|ml))|postscript|ps)\w+)\b'
      scope: meta.directive.abc
      captures:
        1: keyword.operator.word.directive.fmt
      push:
        - meta_content_scope: variable.parameter.directive.fmt
        - include: midi-keywords
        - scope: constant.numeric.float.fmt
          match: '(\d*(?:\.\d*)?)'
        - scope: constant.numeric.float.length-unit.fmt
          match: '(\d*(?:\.\d*)?(?:pt|in|cm)?)'
        - match: '(?i)\b(true|false|yes|no|on|off)\b'
          scope: storage.type.directive.fmt
        - include: comments
        - match: $
          pop: true
    - comment: Inline Postscript Instructions
      match: '(%%)\s*(postscript|ps)\b'
      captures:
        1: comment.line.percentage.fmt
        2: support.function.directive.fmt
      push: 'scope:source.ps'
      with_prototype:
        - include: comments
        - match: $
          pop: true

  midi-keywords:
    - scope: keyword.operator.word.directive.midi.fmt
      match: |-
        (?x)
          (MIDI\b +
            (?:no)?barlines|bassprog|(?:no)?beataccents|beat(?:mod|string)?|
            bend(?:velocity|string)|chord(?:attack|name|program)|
            control(?:combo|string)?|deltaloudness|droneo(?:n|ff)|
            drum(?:on|off|bars|map)|expand|fermata(?:fixed|proportional)?|
            gchord(?:on|off)?|grace(?:divider)?|makechordchannels|pitchbend|
            portamento|program|ptstress|randomchordattack|ratio|stressmodel|
            snt|rtranspose|temperament(?:linear|equal|normal)|transpose|
            trim|vol(inc)?)\b

  embedded-content:
    - comment: Typeset Text
      match: '^\s*(begintext)\b(\s+(?:obeylines|fill|ragged|justify|align|skip))?\b'
      captures:
        1: support.function.directive.fmt
        2: variable.parameter.directive.fmt
      push:
        - meta_scope: meta.typeset.fmt
        - meta_content_scope: string.unquoted.typeset.fmt
        - include: comments
        - match: '^\s*(endtext)'
          captures:
            1: support.function.directive.fmt
          pop: true
    - comment: Embedded HTML
      match: '^\s*(beginml)\b'
      captures:
        1: support.function.directive.fmt
      push: 'scope:text.html.basic'
      with_prototype:
        - include: comments
        - match: '^\s*(endml)'
          captures:
            1: support.function.directive.fmt
          pop: true
    - comment: Embedded JavaScript
      match: '^\s*(beginjs)\b'
      captures:
        1: support.function.directive.fmt
      push: 'scope:source.js'
      with_prototype:
        - include: comments
        - match: '^\s*(endjs)'
          captures:
            1: support.function.directive.fmt
          pop: true
    - comment: Embedded SVG
      match: '^\s*(beginsvg)\b'
      captures:
        1: support.function.directive.fmt
      push: 'scope:text.xml'
      with_prototype:
        - include: comments
        - match: '^\s*(endsvg)'
          captures:
            1: support.function.directive.fmt
          pop: true
    - comment: Embedded PostScript
      match: '^\s*(beginps)(\s+(?:nosvg))?\b'
      captures:
        1: support.function.directive.fmt
        2: variable.parameter.directive.fmt
      push: 'scope:source.ps'
      with_prototype:
        - include: comments
        - match: '^\s*(endps)'
          captures:
            1: support.function.directive.fmt
          pop: true
    # Embedded Markdown will ONLY work when theres a blank line before the '%%endmd'.
    # Otherwise, the scopes used in Markdown will extend past '%%endmd', since
    # the syntax engine would consider the line beneath any Markdown text within
    # the Markdown scope, instead of escaping to the ABC Notation scope as intended.
    - comment: Embedded Markdown
      match: '^\s*(beginmd)\b'
      captures:
        1: support.function.directive.fmt
      push: 'scope:text.html.markdown'
      with_prototype:
        - include: comments
        - match: '^\s*(endmd)'
          captures:
            1: support.function.directive.fmt
          pop: true
...
